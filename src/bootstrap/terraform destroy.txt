PS E:\DANIT\Step3_project\src\bootstrap> terraform destroy
aws_s3_bucket.tf_state: Refreshing state... [id=jenkins-tfstate-arkadii]
aws_s3_bucket_public_access_block.block: Refreshing state... [id=jenkins-tfstate-arkadii]
aws_s3_bucket_versioning.versioning: Refreshing state... [id=jenkins-tfstate-arkadii]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_s3_bucket.tf_state will be destroyed
  - resource "aws_s3_bucket" "tf_state" {
      - arn                         = "arn:aws:s3:::jenkins-tfstate-arkadii" -> null
      - bucket                      = "jenkins-tfstate-arkadii" -> null
      - bucket_domain_name          = "jenkins-tfstate-arkadii.s3.amazonaws.com" -> null
      - bucket_regional_domain_name = "jenkins-tfstate-arkadii.s3.eu-central-1.amazonaws.com" -> null
      - force_destroy               = true -> null
      - hosted_zone_id              = "Z21DNDUVLTQW6Q" -> null
      - id                          = "jenkins-tfstate-arkadii" -> null
      - object_lock_enabled         = false -> null
      - region                      = "eu-central-1" -> null
      - request_payer               = "BucketOwner" -> null
      - tags                        = {
          - "Name" = "jenkins-tfstate-arkadii"
        } -> null
      - tags_all                    = {
          - "Name" = "jenkins-tfstate-arkadii"
        } -> null
        # (3 unchanged attributes hidden)

      - grant {
          - id          = "36ccdf4a8fa3de16437bbb7448782cdd3ae57e296025ade9e0b079b0f4c9fef3" -> null
          - permissions = [
              - "FULL_CONTROL",
            ] -> null
          - type        = "CanonicalUser" -> null
            # (1 unchanged attribute hidden)
        }

      - server_side_encryption_configuration {
          - rule {
              - bucket_key_enabled = false -> null

              - apply_server_side_encryption_by_default {
                  - sse_algorithm     = "AES256" -> null
                    # (1 unchanged attribute hidden)
                }
            }
        }

      - versioning {
          - enabled    = true -> null
          - mfa_delete = false -> null
        }
    }

  # aws_s3_bucket_public_access_block.block will be destroyed
  - resource "aws_s3_bucket_public_access_block" "block" {
      - block_public_acls       = true -> null
      - block_public_policy     = true -> null
      - bucket                  = "jenkins-tfstate-arkadii" -> null
      - id                      = "jenkins-tfstate-arkadii" -> null
      - ignore_public_acls      = true -> null
      - restrict_public_buckets = true -> null
    }

  # aws_s3_bucket_versioning.versioning will be destroyed
  - resource "aws_s3_bucket_versioning" "versioning" {
      - bucket                = "jenkins-tfstate-arkadii" -> null
      - id                    = "jenkins-tfstate-arkadii" -> null
        # (1 unchanged attribute hidden)

      - versioning_configuration {
          - status     = "Enabled" -> null
            # (1 unchanged attribute hidden)
        }
    }

Plan: 0 to add, 0 to change, 3 to destroy.

Changes to Outputs:
  - s3_bucket_name = "jenkins-tfstate-arkadii" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_s3_bucket_versioning.versioning: Destroying... [id=jenkins-tfstate-arkadii]
aws_s3_bucket_public_access_block.block: Destroying... [id=jenkins-tfstate-arkadii]
aws_s3_bucket_public_access_block.block: Destruction complete after 1s
aws_s3_bucket_versioning.versioning: Destruction complete after 1s
aws_s3_bucket.tf_state: Destroying... [id=jenkins-tfstate-arkadii]
aws_s3_bucket.tf_state: Destruction complete after 1s

Destroy complete! Resources: 3 destroyed.